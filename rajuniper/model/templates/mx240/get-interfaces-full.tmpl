{% set ports = data['ports'] %}
{# set allowed_ports = ['xe', 'ge', 'et', 'lt', 'sp'] #}
{% set allowed_ports = ['ae'] %}
[
{# for port in ports if port['name'].strip().split('-', 1)[0] in allowed_ports recursive #}
{% for port in ports if 'ae' in port['name'].strip().split('-', 1)[0] recursive %}
    {% set name = port['name']|string|trim %}
    {% set speed = port['speed']|string|trim %}
    {% set mac = port['current-physical-address'] if 'current-physical-address' in port else '' %}
    {
        "label": "{{ name }}",
        "properties": {
            "name": "{{ name }}",
            "description": "{{ port['description']|trim|default('') }}",
            "link_level_type": "{{ port['link-level-type']|trim|default('') }}",
            "speed": "{{ speed }}",
            {# If admin-status is ever not a dict, this will be a problem #}
            "admin_status": {{ 'true' if 'up' in port['admin-status']['#text'] else 'false' }},
            "mtu": "{{ port['mtu']|trim|default('') }}",
            {# Some devices have xml formatting information on their mac address and this gets around that #}
            "mac_address": "{{ mac['#text']|trim or mac|trim }}"
        },
        "orchState": "{{ 'active' if 'up' in port['oper-status'] else 'inactive' }}"
    {% set vports = port['logical-interface'] %}
    }{% if not loop.last or vports|length > 0 %},{% endif %}
    {% if port['logical-interface']|default([]) %}
        {% set outer_loop = loop %}
        {% for vport in vports %}
            {
                "label": "{{ vport['name']|string|trim }}",
                "properties": {
                    "name": "{{ vport['name']|string|trim }}",
                    "description": "{{ vport['description']|trim|default('') }}",
                    "physical_interface": "{{ name }}", {# This field only here for logical interfces to give a reference to their parent phycsial interfaces #}
                    "link_level_type": "virtual", {# This shows that this device is a logical-interface #}
                    {# For now these parameters will be the same as the parent physical port #}
                    "speed": "{{ speed }}",
                    "admin_status": {{ 'true' if 'up' in port['admin-status']['#text'] else 'false' }},
                    "mac_address": "{{ mac['#text']|trim or mac|trim }}",
                    {% if vport['address-family'] %}
                        {% for fam in vport['address-family'] %}
                            {% if fam['address-family-name'] == 'inet' %}
                    "mtu": "{{ fam['mtu'] }}",
                                {% if fam['interface-address'] %}
                    "ipv4_addresses": [
                                    {% set ifc_addrs = fam['interface-address'] %}
                                    {% for addr in ifc_addrs %}
                                    {% set getprefix = addr.get('ifa-destination') and '/' in addr['ifa-destination'] %}
                                    {% set prefixl = addr['ifa-destination'].split('/')[1] if getprefix else '32' %}
                                    {% set address = '{}/{}'.format(addr['ifa-local'], prefixl) %}
                                    {% if not loop.first %},{% endif %}"{{ address }}"
                                    {% endfor %}
                    ],
                                {% endif %}
                            {% endif %}
                        {% endfor %}
                    {% endif %}
                },
                "orchState" : "{{ 'active' if 'up' in port['oper-status'] else 'inactive' }}"
            }{% if not loop.last or not outer_loop.last %},{% endif %}
        {% endfor %}
    {% endif %}
{% endfor %}
]
