"$schema" = "http://cyaninc.com/json-schemas/tosca-lite-v1/definition-module#"
title = "Experimental interface resource type definition"
package = juniper
version = "1.0"
description = "This document defines an experimental interface type."
authors = ["Torin Sandall (tsandall@cyaninc.com)"]

imports {
  Root = tosca.resourceTypes.Root
  Container = tosca.capabilityTypes.Container
}

resourceTypes {

  Interface {
    derivedFrom = Root
    title = "Interface"
    description = """
    A network interface.
    """

    properties {

      device {
        type = string
        title = "Device"
        description = "Identifies the device hosting this interface."
        optional = false
      }

      name {
        type = string
        title = "Interface Name"
        description = ""
        optional = false
      }

      description {
        type = string
        title = "Interface Description"
        description = ""
        optional = true
      }

      admin_status {
        type = boolean 
        title = "Admin State Up"
        description = ""
        optional = true
      }

      link_level_type {
        type = string
        enum = ["virtual", "Adaptive-Services", "Logical-tunnel", "Ethernet"],
        description = ""
        optional = true
      }

      mac_address {
        type = string 
        title = "MAC Address"
        description = ""
        optional = true
      }
    
      mtu {
        type = string
        title = "MTU"
        description = ""
        optional = true
      }

      physical_interface {
        type = string
        title = "Physical Interface"
        optional = true
        description = ""
      }

      speed {
        type = string
        title = "Speed"
        description = ""
        optional = true
      }

      ipv4_addresses {
        title = "IP Addresses"
        description = "IP Addresses on this interface"
        type = array
        items.type = string
        optional = true
      }

      security_zone {
        type = string
        title = "Security Zone"
        description = "Security Zone of this interface"
        optional = true
      }

    }

    capabilities {
      virtual_interfaces {
        title = "Virtual Interfaces"
        description = "A physical network interface can host virtual interfaces."
        type = Container
        resourceTypes = [juniper.resourceTypes.Interface]
      }
    }

    requirements {

      ifc_device {
        title = "Device"
        description = "A network interface is hosted on a device."
        type = Container
        minimum = 1
        maximum = 1
        resourceTypes = [juniper.resourceTypes.Device]
      }

      physical_interface {
        title = "Physical Interface"
        description = "A virtual network interface is hosted on a physical interface."
        type = Container
        resourceTypes = [juniper.resourceTypes.Interface]
        minimum = 0
      }
    }

  }
}
